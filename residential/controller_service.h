// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/

#ifndef _controller_service_h_
#define _controller_service_h_

#include <staff/common/IService.h>

// *interface.targetNamespace: http://tempui.org/energy.Controller
// *interface.url: http://10.96.12.47:9090/axis2/services/staff.wsdl.Wsdl/get/energy.Controller/energy.Controller.controller_service.wsdl




namespace energy
{
namespace Controller
{

  //! controller_service service
  // *serviceUri: http://10.96.12.47:9090/axis2/services/energy.Controller.controller_service
  // *soapVersion: 1.1
  // *targetNamespace: http://tempui.org/energy.Controller
  class controller_service: public staff::IService
  {
  public:
    // *requestElement: COpostsync
    // *responseElement: COpostsyncResult
    virtual double COpostsync(int control_mode, double base_setpoint) = 0;

    // *requestElement: COsync
    // *responseElement: COsyncResult
    virtual double COsync(double load, double demand, int pstate, double total, double target, double pAvg, double pStd, double base_setpoint, int control_mode, double market_current_frameclearing_price) = 0;

    // *requestElement: COinit
    // *responseElement: COinitResult
    virtual double COinit(double market_init_price, int pstate, int market_period, int control_mode, double psetpoint, double base_setpoint, double heating_base_setpoint, double cooling_base_setpoint) = 0;

    // *requestElement: COpresync
    // *responseElement: COpresyncResult
    virtual int COpresync(double base_setpoint, double psetpoint, int control_mode) = 0;
  };

}
}

#endif // _controller_service_h_

